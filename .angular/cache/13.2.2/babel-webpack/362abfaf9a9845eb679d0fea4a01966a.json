{"ast":null,"code":"import _classCallCheck from \"/home/evaristus/PycharmProjects/tpdc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/evaristus/PycharmProjects/tpdc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services\";\nexport var ErrorInterceptor = /*#__PURE__*/(function () {\n  var ErrorInterceptor = /*#__PURE__*/function () {\n    function ErrorInterceptor(authenticationService) {\n      _classCallCheck(this, ErrorInterceptor);\n\n      this.authenticationService = authenticationService;\n    }\n\n    _createClass(ErrorInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        var _this = this;\n\n        return next.handle(request).pipe(catchError(function (err) {\n          if (err.status === 401) {\n            // auto logout if 401 response returned from api\n            _this.authenticationService.logout();\n\n            location.reload(true);\n          }\n\n          var error = err.error.message || err.statusText;\n          return throwError(error);\n        }));\n      }\n    }]);\n\n    return ErrorInterceptor;\n  }();\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}