{"ast":null,"code":"import _classCallCheck from \"/home/evaristus/PycharmProjects/tpdc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/evaristus/PycharmProjects/tpdc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from '../_services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services\";\nexport var JwtInterceptor = /*#__PURE__*/(function () {\n  var JwtInterceptor = /*#__PURE__*/function () {\n    function JwtInterceptor(authenticationService) {\n      _classCallCheck(this, JwtInterceptor);\n\n      this.authenticationService = authenticationService;\n    }\n\n    _createClass(JwtInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(request, next) {\n        // add authorization header with jwt token if available\n        var currentUser = this.authenticationService.currentUserValue;\n\n        if (currentUser && currentUser.accessToken) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: \"Bearer \".concat(currentUser.accessToken)\n            }\n          });\n        }\n\n        return next.handle(request);\n      }\n    }]);\n\n    return JwtInterceptor;\n  }();\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: JwtInterceptor.ɵfac\n  });\n  return JwtInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}